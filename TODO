CLI

* Accept multiple interfaces when adding or deleting static MACs
* Group identical static MACs in a single command when building config
* Timeout in "Password:" prompt
* Ask for saving configuration on "reload"

MLS

* When we have static multicast macs, forward matching packets to
  all appropriate ports, not just the first

BUG FIXING
1) Completion comanda de configurare interface ...
2) no interface ... mumu
3) show run / start nu arata interfetele != eth, vlan

Campurile de tip char[] cu lungime cunoscuta trebuie re-verificate, pentru a stabili
(si a fi consecventi) una din urmatoarele reguli:
* declaram campurile avand dimensiune exact cat constanta (ex. IFNAMSIZ) si folosim
  intotdeauna strncpy cu constanta; string-ul NU este null terminated daca are exact
  lungimea din constanta -> aici pot sa apara probleme pentru ca atunci cand se
  "citeste" (adica se copiaza intr-un alt buffer "suficient de mare") string-ul
  rezultat nu va fi de asemenea null-terminated
* declaram campurile avand dimensiune constanta + 1, folosim strncpy pentru scriere
  in ele (si punem '\0' in str[CONSTANTA] pentru a ne asigura ca e null-terminated);
  folosim strcpy pentru citire (pentru ca este null terminated)

Shared (shared.c)
Trebuie asigurata consistenta intre comenzile de tipul cfg_ in sensul apelarii lor
avand lock pe cfg sau nu: ori fiecare functie isi asigura singura zona critica
(cfg_lock() si cfg_unlock()), ori trebuie asigurat din afara pentru toate. Hit:
cfg_lock() poate fi apelat de mai multe ori, fara probleme. Mai bine se face din
interior la fiecare => e mai sigur si mai usor de programat. Logic ar fi ca doar
functiile (statice) cu __ la inceput sa functioneze cu zona critica asigurata din
exterior.

Comanda write mem nu merge in cazul in care nu exista /etc/lisa si/sau /etc/lisa/tags.
Normal de altfel, pt ca fopen intoarce eroare. Ar trebui totusi ca functia sa creeze
directoarele in cazul in care nu exista.

./swcfgload <if_name> <tag_name> [<description>] - Nu adauga si tag-ul (cel putin
asa se intelege din output-ul lui show run).


BUG FIX build userspace

1) flagul "-g" e pus dupa principii "random"; ar trebui sa se faca in toate Makefile
o regula de genul "daca e definit DEBUG, atunci CFLAGS+= -g; se compileaza cu DEBUG=1 make
pentru debugging

2) daca se fac modificari in mm.c si se da make (general, in userspace), nu se recompileaza
nimic; ar trebui buildate intai chestiile din lib, apoi restul sa aiba dependente


XEN INTEGRATION

1) Creare domeniu / Start domeniu existent (Script: vif-lisa)

1.a) Creare interfata tagged:

 swctl addtagged if_name tag_name

 Aici se creeaza asocierea interfata - tag intr-o zona de shared memory si 
 se adauga interfata in switch.

1.b) Incarcare configuratie interfata tagged:

 swcfgload if_name tag_name [if_description]

* cfgfile := /etc/lisa/tags/tag_name
* cfgfile contine numai comenzile de configurare interfata (nu contine 
comanda interface if_name).
* daca cfgfile nu exista (domeniu nou) atunci nu se intampla nimic -- normal
pentru ca daca nu se da wr mem pana la oprirea domeniului, atunci inseamna
ca nu i s-a salvat configuratia si data viitoare porneste cu configuratie "goala"

2) Salvarea configuratiei (write mem)

Se salveaza totul intr-un fisier global: /etc/lisa/config.text, cu exceptia configuratiei
interfetelor "tagged" care se salveaza in fisierele /etc/lisa/tags/tag_name.

3) Incarcarea configuratiei globale la startup lisa:

swcfgload

4) Shutdown domeniu (Script: vif-lisa):

swctl del if_name

OBS: se va sterge si asocierea interfetei cu tag-ul din shared memory

